2/25

starter_scripts:

    generate_results.py: the place where you build your submission

                        (similiar to TrackFactory class in ppd)

    generate_submission.py: 

        writes to random_submission.json

    
scorer_scripts:

    score_detections.py

        -g 

    python scorer_scripts_v2/scorer_scripts_v2/score_detections.py -g starter_scripts_v2/starter_scripts_v2/training_GT_labels_v2.json -p starter_scripts_v2/starter_scripts_v2/random_submission.json

look for people on github with these file names?
lookn for code keywords?

we don't get labels for test dataset,
    but we could build those our self

iiuc, the leaderboard images are the exact ones we're operating on
for our score on the leaderboard

what is % score on the leaderboard for accuracy only right?

where in the submission.json is CI being written?

IuC, mAP - define

what is the 9th position in random_submission file? why 0.5?
    the ground truth only has eight

resolve the labels / "ground truth" file versioning controversy
    i have v2, it was uploaded when ?
    when is the latest complaint on the forum ?
    Feb20 was complaint/response

do we upload code for test2 or only test3?

why does ground truth only have one bounding box?

no gate -> submission should have empty brackets

we can use scorer to figure out the expected score from a naive/baseline avg algo
    -> avg coord from training_labels.json
        adjust for vert/horiz align
        or we can just hand score em

free gpu instances?
https://www.herox.com/alphapilot/resource/285

most concise description: https://www.herox.com/alphapilot/77-test-2

    The internal clearance is 8ft x 8ft, the external dimensions are 11ft x 11ft, and the depth is 1ft.

    libraries should be compatible with Python 3.5.2

ArUco markers / AR markers

    https://docs.opencv.org/3.4.2/d5/dae/tutorial_aruco_detection.html

    https://pypi.org/project/ar-markers/

    https://www.learnopencv.com/barcode-and-qr-code-scanner-using-zbar-and-opencv/
        import pyzbar

    https://stackoverflow.com/questions/50433482/how-to-detect-a-pattern-such-as-a-qr-code-on-a-scanned-paper-so-that-it-can-be

coco dataset
http://cocodataset.org/#home
https://github.com/cocodataset/cocoapi


stuff to get:

    shapely package?
        from wheel in misc/
            Shapely-1.6.4.post1-cp27-cp27m-win32.whl
        downloaded here:
            https://www.lfd.uci.edu/~gohlke/pythonlibs/#shapely

    python3 - need time.monotonic()

    vott - img/vid tagging
    https://github.com/Microsoft/VoTT

TODO

    [x] correct glob issue, path name in submission.json keys
    [x] run score_detections on training data

        python scorer_scripts_v2/scorer_scripts_v2/score_detections.py -g training_GT_labels_v2.json -p random_submission3.json

    [x] plot in matplotlib in notebook

    [x] cv draw polygon
    
    [x] build a avg point submission
        [x] get it's score
        [x] first, just with inner box
        [x] run pred=truth, cocoMap? 0.91
        [ ] build mini training set
        [x] build second box, score
        
        inner rect is 8'x8', and frame is 3'
            -> ratio is 3/8 *width or 3/8*height

        second box won't help our local score:
            the ground truth has no second box!

    [~] how does generate_submission build something different than
        our mean_prediction.json?
        -> still, idk

2/26

    [x] build mini training-set

    [x] score() takes dict not fn

    [x] utils gets calcMean functions
        [x] run on mini1 vs mini2

    [x] pred=actual on mini-sets

    [x] label images task
        [x] run program
        [~] determine my block 7500 - 7999
            [~] verify this with other submissions
        [x] start a trial
            [x] verify -j output works
            [x] verify an alter frame
            [x] find a mislabel
        [~] how do we handle corner out-of-frame?

    [ ] breakout cocoMAP for individual images / indvidual corners

    [x] perform search on baseline ideal rect

    [~] build roiSelect tool (for leader set)

    [~] bring in pyzbar, try to work it

3/1

    [x] Install Python3 + TF + OpenCV
        - got 64 bit python 3.7.2
            per: https://www.tensorflow.org/install/pip?lang=python3
        - put python37/ on system path
        - rename python37/python.exe - >python37/python3.exe
        - but now pip is broken: so...
            python3 -m pip install --upgrade pip
            -> now pip3 --version works
        >where python vs >where python3
        >where pip vs >where pip3
        
        [x] Jupyter for py3:
            >pip3 install jupyter
        
        
        https://stackoverflow.com/questions/28831854/how-do-i-add-python3-kernel-to-jupyter-ipython

            >jupyter kernelspec list

        we can control which jupyter server launches with:
        >python[3] -m jupyter notebook
            >python3 -m jupyter --version  -> 4.4.0 
              vs
            >python -m jupyter --version    -> 4.3.0

        [x] Tensorflow
            >pip3 install --user --upgrade tensorflow
            >python3 -c "import tensorflow as tf; tf.enable_eager_execution(); print(tf.reduce_sum(tf.random_normal([1000, 1000])))"
                2019-03-01 10:56:34.567272: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2
                tf.Tensor(-48.9541, shape=(), dtype=float32)

        [x] OpenCV

            https://www.pyimagesearch.com/2018/09/19/pip-install-opencv/

            >pip3 install --upgrade opencv-contrib-python

            import cv2; cv2.__version__
            > 4.0.0

        [x] Maplotlib + Shapely

            >pip3 installl --upgrade matplotlib
            
            [BAD!]
            >pip3 install --upgrade shapely

            [WORKS!]
            >pip3 install misc/Shapely-1.6.4.post1-cp37-cp37m-win_amd64.whl

        [x] 2to3? to fix my modules?

            doc: https://docs.python.org/3.7/library/2to3.html

            use -w to write the changes, old code will be a *.bak file
            
            [x] how to call?

            [x] how to call recursively on directory[s] of .py files

            main diffs:
                dict.keys() does not return list
                print


            thoughts:
            i rely on python2 division style to return a rounded int , how can i insure this stays in py3?

        [x] TF tutorial on MNIST?

            https://towardsdatascience.com/image-classification-in-10-minutes-with-mnist-dataset-54c35b77a38d

            [x] Complete it: ~50 secs per epoch
            [ ] how to predict a point in the image

            [x] do regression example

            https://www.tensorflow.org/tutorials/keras/basic_regression

    3/5

        [x] build point in image in MNIST example

            [x] min/max v/h example

                [~] new_truth as float? un-nec

            [x] add new_truth for x_test
            
            [x] need to encapsulate model building and do full-cycle
                on multiple params

            [x] is there a way to see results of history  at 
                granularity less than an epoch?

            [x] cut down train size; increase epochs

        [ ] sample tf on alphapilot

            [x] rgb channel working
                Conv3D? - no,
                grayscale appears to train faster

            [x] downsize + grayscale images

            [x] train

        [x] cartesian distance + cocoMAP eval
            [ ] from two predicted number -> point -> distance


        [ ] iterate on params for simple model

    3/7

        [x] refresh on current book: hello_alpha_tf
            [x] predVsActual for current model
            [x] fix plotLabel to accept pred vs actual entries
            [x] plotLabel for best-fits / worst-fits
            [x] use seed for reproducible random sampling

        [ ] some useful features: 
            [~] how to run a model.fit in the background? say with 25% cpu?
                we can tie-up our notebook kernel, so need to run in separate
                kernel; how to get data and model-definition intialized there?
                how to return the data back into current kernel?
                ->works decently well with full cpu, yielding to other processes
            [x] what do the elements in the list return by model.evaluate() mean?
                -> run with verbose to see
            [ ] use epoch-callback to record training time
            [x] how to presist a trained-model to disk? definition/config + weights?

        [ ] validation classes/methods for data
            [ ] how to raise errors/warnings

        [ ] iterate on params: track time + accuracy

            [ ] show all the learning curves on one plot

        4:00 - 5:00
            [x] create a git checkpoint
            [x] start a long model run on - on y1
            [x] start a new book with encapsulated functions
            [x] come back and figure out how to save the model's config

        8:30 - 9:00
            [ ] Get a long training run to kickoff:
                [ ] new notebook
                [ ] design a iter loop to do a point
                [ ] high data, high validation
                [ ] Metrics:   
                    [ ] Larger Filter,
                    [ ] Larger Images,
                    [ ] Larger Training Set
                [ ] first test it low epoch for multi-iteration


        Notes:
            it looks like the time bottleneck is training img
            so we can give in a large N with a large validation split
            and still have almost the same amount of time-perf, true?
            -> there is a large diff between test/training for 
                predVsActual, so somehow the epoch callback knows this
                when printing out mae_training
            


    Misc Stuff

        [ ] Python3 quirks

            https://docs.python.org/3.0/whatsnew/3.0.html

            dictkeys, dictitems types; need to call to list to cast

            why does filter return an iterator?
            https://stackoverflow.com/questions/13638898/how-to-use-filter-map-and-reduce-in-python-3



        [ ] tensorflow import not recognized by python-language-server
        
            https://github.com/Microsoft/python-language-server

            https://github.com/Microsoft/python-language-server/issues/453

            tf.__version__ == 1.13.1





        Package               Version
        --------------------- -----------
        absl-py               0.7.0
        astor                 0.7.1
        attrs                 18.2.0
        backcall              0.1.0
        bleach                3.1.0
        colorama              0.4.1
        cycler                0.10.0
        decorator             4.3.2
        defusedxml            0.5.0
        entrypoints           0.3
        gast                  0.2.2
        grpcio                1.19.0
        h5py                  2.9.0
        ipykernel             5.1.0
        ipython               7.3.0
        ipython-genutils      0.2.0
        ipywidgets            7.4.2
        jedi                  0.13.3
        Jinja2                2.10
        jsonschema            3.0.1
        jupyter               1.0.0
        jupyter-client        5.2.4
        jupyter-console       6.0.0
        jupyter-core          4.4.0
        Keras-Applications    1.0.7
        Keras-Preprocessing   1.0.9
        kiwisolver            1.0.1
        Markdown              3.0.1
        MarkupSafe            1.1.1
        matplotlib            3.0.3
        mistune               0.8.4
        mock                  2.0.0
        nbconvert             5.4.1
        nbformat              4.4.0
        notebook              5.7.4
        numpy                 1.16.2
        opencv-contrib-python 4.0.0.21
        pandocfilters         1.4.2
        parso                 0.3.4
        pbr                   5.1.3
        pickleshare           0.7.5
        pip                   19.0.3
        prometheus-client     0.6.0
        prompt-toolkit        2.0.9
        protobuf              3.7.0
        Pygments              2.3.1
        pyparsing             2.3.1
        pyrsistent            0.14.11
        python-dateutil       2.8.0
        pywinpty              0.5.5
        pyzmq                 18.0.0
        qtconsole             4.4.3
        Send2Trash            1.5.0
        setuptools            40.6.2
        Shapely               1.6.4.post1
        six                   1.12.0
        tensorboard           1.13.0
        tensorflow            1.13.1
        tensorflow-estimator  1.13.0
        termcolor             1.1.0
        terminado             0.8.1
        testpath              0.4.2
        tornado               6.0
        traitlets             4.3.2
        wcwidth               0.1.7
        webencodings          0.5.1
        Werkzeug              0.14.1
        wheel                 0.33.1
        widgetsnbextension    3.4.2
        



